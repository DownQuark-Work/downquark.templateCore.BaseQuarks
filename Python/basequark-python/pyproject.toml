[tool.poetry]
name = "basequark_python"
version = "0.0.1"
description = "Python Application Boilerplate Template"
authors = ["mlnck <mlnck@downquark.work>"]
repository = "https://github.com/dq-mlnck/basequark-python"
documentation = "https://dq-mlnck.github.io/basequark-python/"
readme = "README.md"
packages = [
  {include = "basequark_python"}
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"

mysql-connector-python = "^9.1.0"
[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pyright = "^1.1.382"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.pyright]
include = ["basequark_python"]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
[lint]
    select = [
        # flake8-2020
        "YTT",
        # flake8-bandit
        "S",
        # flake8-bugbear
        "B",
        # flake8-builtins
        "A",
        # flake8-comprehensions
        "C4",
        # flake8-debugger
        "T10",
        # flake8-simplify
        "SIM",
        # isort
        "I",
        # mccabe
        "C90",
        # pycodestyle
        "E", "W",
        # pyflakes
        "F",
        # pygrep-hooks
        "PGH",
        # pyupgrade
        "UP",
        # ruff
        "RUF",
        # tryceratops
        "TRY",
    ]
    ignore = [
        # LineTooLong
        "E501",
        # DoNotAssignLambda
        "E731",
    ]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["basequark_python"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
